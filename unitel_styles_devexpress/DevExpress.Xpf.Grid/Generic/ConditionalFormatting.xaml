<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgc="clr-namespace:DevExpress.Xpf.Grid.Native;assembly=DevExpress.Xpf.Grid.v20.2.Core" xmlns:dxgn="clr-namespace:DevExpress.Xpf.Core.Native;assembly=DevExpress.Xpf.Grid.v20.2.Core" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:conditionalFormattingManager="clr-namespace:DevExpress.Xpf.Core.ConditionalFormattingManager;assembly=DevExpress.Xpf.Core.v20.2">
  <DataTemplate x:Key="EmptyFormatTemplate">
    <TextBlock Text="{dx:DataControlStringId ConditionalFormatting_Manager_NoFormatSet}" HorizontalAlignment="Center" VerticalAlignment="Center" />
  </DataTemplate>
  <ControlTemplate x:Key="SimpleFormatContainerTemplate" TargetType="{x:Type ContentControl}">
    <Border BorderThickness="1" BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:FormatPreviewControl}}}" CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:FormatPreviewControl}}}" Padding="{Binding Padding, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:FormatPreviewControl}}}">
      <ContentPresenter />
    </Border>
  </ControlTemplate>
  <DataTemplate x:Key="SimpleFormatContentTemplate">
    <StackPanel Orientation="Horizontal">
      <TextBlock Text="{Binding PreviewString, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:FormatPreviewControl}}}" HorizontalAlignment="Center" VerticalAlignment="Center" TextDecorations="{Binding TextDecorations}" />
      <dx:DXImage Source="{Binding Icon}" Stretch="None" HorizontalAlignment="Center" Margin="1,0,0,0" Visibility="{Binding Icon, Converter={dx:NullableToVisibilityConverter}}" />
    </StackPanel>
  </DataTemplate>
  <DataTemplate x:Key="SimpleFormatTemplate">
    <ContentControl Content="{Binding}" Template="{StaticResource SimpleFormatContainerTemplate}" ContentTemplate="{Binding SimpleFormatTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:FormatPreviewControl}}}" />
  </DataTemplate>
  <DataTemplate x:Key="IconSetFormatTemplate">
    <ItemsControl ItemsSource="{Binding Icons}">
      <ItemsControl.ItemTemplate>
        <DataTemplate>
          <dx:DXImage Source="{Binding}" Stretch="None" HorizontalAlignment="Center" Margin="1" />
        </DataTemplate>
      </ItemsControl.ItemTemplate>
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" />
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
    </ItemsControl>
  </DataTemplate>
  <DataTemplate x:Key="ColorScaleFormatTemplate">
    <Rectangle Fill="{Binding Converter={dxgc:ColorScalePreviewConverter}}" />
  </DataTemplate>
  <DataTemplate x:Key="DataBarFormatTemplate">
    <Border BorderThickness="1" BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:FormatPreviewControl}}}" Padding="2,2,20,2">
      <Rectangle Fill="{Binding Fill}" Stroke="{Binding BorderBrush}" />
    </Border>
  </DataTemplate>
  <dxgn:DebugConverter x:Key="DebugConverter" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.FormatPreviewControl}" TargetType="{x:Type dxg:FormatPreviewControl}" BasedOn="{StaticResource {x:Type ContentControl}}">
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
    <Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderNoneBrush}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
    <Setter Property="Format" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}, Converter={StaticResource DebugConverter}}" />
    <Setter Property="EmptyFormatTemplate" Value="{StaticResource EmptyFormatTemplate}" />
    <Setter Property="SimpleFormatTemplate" Value="{StaticResource SimpleFormatContentTemplate}" />
    <Setter Property="IconSetFormatTemplate" Value="{StaticResource IconSetFormatTemplate}" />
    <Setter Property="ColorScaleFormatTemplate" Value="{StaticResource ColorScaleFormatTemplate}" />
    <Setter Property="DataBarFormatTemplate" Value="{StaticResource DataBarFormatTemplate}" />
    <Setter Property="PreviewString" Value="AaBbCcYyZz" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:FormatPreviewControl}">
          <Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="FormatType" Value="{x:Null}">
        <Setter Property="ContentTemplate" Value="{Binding EmptyFormatTemplate, RelativeSource={RelativeSource Self}}" />
      </Trigger>
      <Trigger Property="FormatType" Value="{x:Type dx:Format}">
        <Setter Property="ContentTemplate" Value="{StaticResource SimpleFormatTemplate}" />
      </Trigger>
      <Trigger Property="FormatType" Value="{x:Type conditionalFormattingManager:IconFormatStyle}">
        <Setter Property="ContentTemplate" Value="{Binding IconSetFormatTemplate, RelativeSource={RelativeSource Self}}" />
      </Trigger>
      <Trigger Property="FormatType" Value="{x:Type dx:ColorScaleFormat}">
        <Setter Property="ContentTemplate" Value="{Binding ColorScaleFormatTemplate, RelativeSource={RelativeSource Self}}" />
      </Trigger>
      <Trigger Property="FormatType" Value="{x:Type dx:DataBarFormat}">
        <Setter Property="ContentTemplate" Value="{Binding DataBarFormatTemplate, RelativeSource={RelativeSource Self}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>