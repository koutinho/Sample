<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxdlg="http://schemas.devexpress.com/winfx/2008/xaml/dialogs" xmlns:dxdlgt="http://schemas.devexpress.com/winfx/2008/xaml/dialogs/themekeys" xmlns:dxdlgn="http://schemas.devexpress.com/winfx/2008/xaml/dialogs/internal" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <dxdlgn:DialogStringIdConverter x:Key="DialogStringIdConverter" />
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <dx:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" />
  <Style x:Key="{dxdlgt:DialogsThemeKey ResourceKey=DialogWindowStyle}" TargetType="{x:Type dxdlg:DialogWindow}" BasedOn="{StaticResource ResourceKey={dxt:ThemedWindowThemeKey ResourceKey=WindowStyle}}">
    <Setter Property="ShowIcon" Value="True" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="ResizeBorderThickness" Value="3" />
    <Style.Triggers>
      <Trigger Property="WindowStyle" Value="ToolWindow">
        <Setter Property="ShowIcon" Value="True" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdlgt:DialogsThemeKey ResourceKey=FileDialogWindowStyle}" TargetType="{x:Type dxdlg:FileDialogWindow}" BasedOn="{StaticResource ResourceKey={dxdlgt:DialogsThemeKey ResourceKey=DialogWindowStyle}}">
    <Setter Property="Width" Value="900" />
    <Setter Property="MinWidth" Value="600" />
    <Setter Property="Height" Value="600" />
    <Setter Property="MinHeight" Value="400" />
  </Style>
  <Style x:Key="{dxdlgt:DialogsThemeKey ResourceKey=FolderBrowserWindowStyle}" TargetType="{x:Type dxdlg:FolderBrowserWindow}" BasedOn="{StaticResource ResourceKey={dxdlgt:DialogsThemeKey ResourceKey=DialogWindowStyle}}">
    <Setter Property="Width" Value="400" />
    <Setter Property="MinWidth" Value="320" />
    <Setter Property="Height" Value="600" />
    <Setter Property="MinHeight" Value="380" />
  </Style>
  <!--#region view styles-->
  <Style x:Key="ViewBaseStyle" TargetType="{x:Type dxdlgn:DialogCardView}">
    <Style.Resources>
      <ResourceDictionary>
        <!--region Image Style-->
        <Style x:Key="ImageStyle" TargetType="{x:Type dxe:ImageEdit}">
          <Setter Property="IsReadOnly" Value="True" />
          <Setter Property="EditMode" Value="InplaceInactive" />
          <Setter Property="ShowMenu" Value="False" />
          <Setter Property="ShowBorder" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
          <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
        </Style>
        <!--endregion-->
        <!--#region Name Styles-->
        <Style x:Key="PropertyValueStyle" TargetType="{x:Type dxg:CardCellContentPresenter}">
          <Setter Property="Foreground" Value="{dxi:ThemeResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
          <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Border}}" Value="True">
              <Setter Property="Foreground" Value="{dxi:ThemeResource {dxgt:GridRowThemeKey ResourceKey=TextRowSelectedBrush}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
              <Setter Property="Foreground" Value="{dxi:ThemeResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" />
            </DataTrigger>
            <Trigger Property="IsFocusedCell" Value="True">
              <Setter Property="Foreground" Value="{dxi:ThemeResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
            </Trigger>
          </Style.Triggers>
        </Style>
        <Style x:Key="EditablePropertyValueStyle" BasedOn="{StaticResource PropertyValueStyle}" TargetType="{x:Type dxg:CardCellContentPresenter}">
          <Setter Property="NavigationIndex" Value="0" />
          <Setter Property="FieldName" Value="DisplayText" />
        </Style>
        <Style x:Key="PropertyNameStyle" TargetType="{x:Type TextBlock}">
          <Setter Property="Margin" Value="5, 4" />
          <Setter Property="Foreground" Value="{dxi:ThemeResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
          <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Border}}" Value="True">
              <Setter Property="Foreground" Value="{dxi:ThemeResource {dxgt:GridRowThemeKey ResourceKey=TextRowSelectedBrush}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
              <Setter Property="Foreground" Value="{dxi:ThemeResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" />
            </DataTrigger>
          </Style.Triggers>
        </Style>
        <!--#endregion-->
        <!--#region Card Container Template-->
        <Style x:Key="CardBorderStyle" TargetType="{x:Type Border}">
          <Setter Property="Background" Value="{dxi:ThemeResource {dxgt:GridRowThemeKey ResourceKey=BorderNoneBrush}}" />
          <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{dxi:ThemeResource {dxgt:GridRowThemeKey ResourceKey=BorderSelectedBrush}}" />
            </Trigger>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
              <Setter Property="Background" Value="{dxi:ThemeResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}" />
            </DataTrigger>
          </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="CardContainerTemplate" TargetType="{x:Type ContentControl}">
          <Grid Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Top" ClipToBounds="False">
            <Border x:Name="borderCard" Width="Auto" Height="Auto" Style="{StaticResource CardBorderStyle}">
              <ContentPresenter />
            </Border>
          </Grid>
        </ControlTemplate>
        <!--#endregion-->
        <!--#region Card Header Template-->
        <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPanelTemplate, IsThemeIndependent=True }" TargetType="{x:Type dxg:GridCardHeaderControl}">
          <ContentPresenter Visibility="Collapsed" />
        </ControlTemplate>
        <!--#endregion-->
        <!--#region GridCard Style-->
        <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=http://schemas.devexpress.com/winfx/2008/xaml/grid.GridCard}" TargetType="{x:Type dxg:GridCard}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate>
                <ContentControl x:Name="card" Focusable="False" FocusVisualStyle="{x:Null}" Template="{StaticResource CardContainerTemplate}" Style="{Binding Path=(dxg:GridControl.ActiveView).CardStyle, RelativeSource={RelativeSource TemplatedParent}}">
                  <ContentControl ClipToBounds="False" Focusable="False" FocusVisualStyle="{x:Null}">
                    <dxg:GridCardContentPresenter x:Name="presenter" Margin="3, 0" ClipToBounds="False" />
                  </ContentControl>
                </ContentControl>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
        <!--#endregion-->
      </ResourceDictionary>
    </Style.Resources>
    <Setter Property="IsColumnChooserVisible" Value="False" />
    <Setter Property="NavigationStyle" Value="Row" />
    <Setter Property="SeparatorThickness" Value="0" />
    <Setter Property="ShowCardExpandButton" Value="False" />
    <Setter Property="ShowColumnHeaders" Value="False" />
    <Setter Property="ShowFilterPanelMode" Value="Never" />
    <Setter Property="ShowGroupedColumns" Value="False" />
    <Setter Property="ShowGroupPanel" Value="False" />
    <Setter Property="ShowSearchPanelMode" Value="Never" />
    <Setter Property="ShowFocusedRectangle" Value="False" />
    <Setter Property="ShowSelectionRectangle" Value="True" />
  </Style>
  <Style x:Key="{dxdlgt:DialogsThemeKey ResourceKey=IconViewStyle}" BasedOn="{StaticResource ViewBaseStyle}" TargetType="{x:Type dxdlgn:DialogCardView}">
    <Style.Resources>
      <ResourceDictionary>
        <!--#region IconViewCardTemplate-->
        <DataTemplate x:Key="IconViewCardTemplate">
          <ContentControl Background="Transparent">
            <Grid ClipToBounds="False" UseLayoutRounding="True">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <dxe:ImageEdit x:Name="lblImage" Grid.Column="1" Margin="6,1" Style="{StaticResource ImageStyle}" Height="{Binding Path=IconSize, RelativeSource={RelativeSource AncestorType={x:Type dxdlgn:DialogViewModeViewBase}}, Mode=OneWay}" Width="{Binding Path=IconSize, RelativeSource={RelativeSource AncestorType={x:Type dxdlgn:DialogViewModeViewBase}}, Mode=OneWay}">
                <dxe:ImageEdit.EditValue>
                  <MultiBinding Converter="{dxdlgn:IconViewImageConverter}">
                    <Binding Path="Row" Mode="OneWay" />
                    <Binding Path="IconSize" RelativeSource="{RelativeSource AncestorType={x:Type dxdlgn:DialogViewModeViewBase}}" Mode="OneWay" />
                  </MultiBinding>
                </dxe:ImageEdit.EditValue>
              </dxe:ImageEdit>
              <dxg:CardCellContentPresenter x:Name="lblFileName" Grid.Row="1" MaxHeight="60" MaxWidth="60" Style="{StaticResource EditablePropertyValueStyle}" />
            </Grid>
          </ContentControl>
        </DataTemplate>
        <!--#endregion-->
      </ResourceDictionary>
    </Style.Resources>
    <Setter Property="CardMargin" Value="1" />
    <Setter Property="CardLayout" Value="Rows" />
    <Setter Property="CardTemplate" Value="{StaticResource IconViewCardTemplate}" />
  </Style>
  <Style x:Key="{dxdlgt:DialogsThemeKey ResourceKey=SmallIconViewStyle}" BasedOn="{StaticResource ViewBaseStyle}" TargetType="{x:Type dxdlgn:DialogCardView}">
    <Style.Resources>
      <ResourceDictionary>
        <!--#region SmallIconViewCardTemplate-->
        <DataTemplate x:Key="SmallIconViewCardTemplate">
          <ContentControl Background="Transparent">
            <Grid Width="340" Margin="0, 3" ClipToBounds="False" UseLayoutRounding="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <dxe:ImageEdit Style="{StaticResource ImageStyle}" Width="{Binding Path=IconSize, RelativeSource={RelativeSource AncestorType={x:Type dxdlgn:DialogViewModeViewBase}}, Mode=OneWay}" Height="{Binding Path=IconSize, RelativeSource={RelativeSource AncestorType={x:Type dxdlgn:DialogViewModeViewBase}}, Mode=OneWay}">
                <dxe:ImageEdit.EditValue>
                  <MultiBinding Converter="{dxdlgn:IconViewImageConverter}">
                    <Binding Path="Row" Mode="OneWay" />
                    <Binding Path="IconSize" RelativeSource="{RelativeSource AncestorType={x:Type dxdlgn:DialogViewModeViewBase}}" Mode="OneWay" />
                  </MultiBinding>
                </dxe:ImageEdit.EditValue>
              </dxe:ImageEdit>
              <dxg:CardCellContentPresenter x:Name="lblFileName" Grid.Column="1" Style="{StaticResource EditablePropertyValueStyle}" />
            </Grid>
          </ContentControl>
        </DataTemplate>
        <!--#endregion-->
      </ResourceDictionary>
    </Style.Resources>
    <Setter Property="CardMargin" Value="1" />
    <Setter Property="CardLayout" Value="Rows" />
    <Setter Property="CardTemplate" Value="{StaticResource SmallIconViewCardTemplate}" />
  </Style>
  <Style x:Key="{dxdlgt:DialogsThemeKey ResourceKey=ListViewStyle}" BasedOn="{StaticResource ViewBaseStyle}" TargetType="{x:Type dxdlgn:DialogCardView}">
    <Style.Resources>
      <ResourceDictionary>
        <!--#region ListViewCardTemplate-->
        <DataTemplate x:Key="ListViewCardTemplate">
          <ContentControl Background="Transparent">
            <Grid ClipToBounds="False" UseLayoutRounding="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <dxe:ImageEdit Style="{StaticResource ImageStyle}" EditValue="{Binding Path=Row, Mode=OneWay, Converter={dxdlgn:CardImageConverter}, ConverterParameter=List}" />
              <dxg:CardCellContentPresenter x:Name="lblFileName" Grid.Column="1" Style="{StaticResource EditablePropertyValueStyle}" />
            </Grid>
          </ContentControl>
        </DataTemplate>
        <!--#endregion-->
      </ResourceDictionary>
    </Style.Resources>
    <Setter Property="CardMargin" Value="10, 1, 5, 1" />
    <Setter Property="CardLayout" Value="Columns" />
    <Setter Property="CardTemplate" Value="{StaticResource ListViewCardTemplate}" />
  </Style>
  <Style x:Key="{dxdlgt:DialogsThemeKey ResourceKey=TilesViewStyle}" BasedOn="{StaticResource ViewBaseStyle}" TargetType="{x:Type dxdlgn:DialogCardView}">
    <Style.Resources>
      <ResourceDictionary>
        <!--#region TilesViewCardTemplate-->
        <DataTemplate x:Key="TilesViewCardTemplate">
          <ContentControl Background="Transparent">
            <Grid Width="240" ClipToBounds="False" UseLayoutRounding="True">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <dxe:ImageEdit Grid.RowSpan="3" Style="{StaticResource ImageStyle}" EditValue="{Binding Path=Row, Mode=OneWay, Converter={dxdlgn:CardImageConverter}, ConverterParameter=Tiles}" />
              <dxg:CardCellContentPresenter x:Name="lblFileName" Grid.Row="0" Grid.Column="2" Margin="-4, -2" Style="{StaticResource EditablePropertyValueStyle}" />
              <dxg:CardCellContentPresenter x:Name="lblTypeName" Grid.Row="1" Grid.Column="2" Margin="-4, -2" FieldName="TypeName" Style="{StaticResource PropertyValueStyle}" />
              <dxg:CardCellContentPresenter x:Name="lblDate" Grid.Row="2" Grid.Column="2" Margin="-4, -2" FieldName="DateModified" Style="{StaticResource PropertyValueStyle}" />
            </Grid>
          </ContentControl>
        </DataTemplate>
        <!--#endregion-->
      </ResourceDictionary>
    </Style.Resources>
    <Setter Property="CardMargin" Value="3" />
    <Setter Property="CardLayout" Value="Rows" />
    <Setter Property="CardTemplate" Value="{StaticResource TilesViewCardTemplate}" />
  </Style>
  <Style x:Key="{dxdlgt:DialogsThemeKey ResourceKey=ContentViewStyle}" BasedOn="{StaticResource ViewBaseStyle}" TargetType="{x:Type dxdlgn:DialogCardView}">
    <Style.Resources>
      <ResourceDictionary>
        <!--#region ContentViewCardTemplate-->
        <DataTemplate x:Key="ContentViewCardTemplate">
          <ContentControl Background="Transparent">
            <Grid ClipToBounds="False" UseLayoutRounding="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="210" />
              </Grid.ColumnDefinitions>
              <dxe:ImageEdit Margin="0, 0, 5, 0" Style="{StaticResource ImageStyle}" EditValue="{Binding Path=Row, Mode=OneWay, Converter={dxdlgn:CardImageConverter}, ConverterParameter=Content}" />
              <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <dxg:CardCellContentPresenter x:Name="lblFileName" Grid.Row="0" Grid.ColumnSpan="3" MaxWidth="600" Style="{StaticResource EditablePropertyValueStyle}" />
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Type:" Style="{StaticResource PropertyNameStyle}" />
                <dxg:CardCellContentPresenter x:Name="lblTypeName" Grid.Row="1" Grid.Column="1" FieldName="TypeName" Style="{StaticResource PropertyValueStyle}" />
              </Grid>
              <Grid Grid.Column="3">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Date modified:" Style="{StaticResource PropertyNameStyle}" />
                <dxg:CardCellContentPresenter x:Name="lblDateModified" Grid.Row="0" Grid.Column="1" FieldName="DateModified" Style="{StaticResource PropertyValueStyle}" />
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Size:" Style="{StaticResource PropertyNameStyle}" />
                <dxg:CardCellContentPresenter x:Name="lblSize" Grid.Row="1" Grid.Column="1" FieldName="Size" Style="{StaticResource PropertyValueStyle}" />
              </Grid>
            </Grid>
          </ContentControl>
        </DataTemplate>
        <!--#endregion-->
      </ResourceDictionary>
    </Style.Resources>
    <Setter Property="MaxCardCountInRow" Value="1" />
    <Setter Property="SeparatorThickness" Value="1" />
    <Setter Property="CardMargin" Value="0" />
    <Setter Property="CardLayout" Value="Rows" />
    <Setter Property="CardAlignment" Value="Stretch" />
    <Setter Property="CardTemplate" Value="{StaticResource ContentViewCardTemplate}" />
  </Style>
  <Style x:Key="{dxdlgt:DialogsThemeKey ResourceKey=DetailsViewStyle}" TargetType="{x:Type dxdlgn:DialogTreeListView}">
    <Setter Property="AllowTreeIndentScrolling" Value="True" />
    <Setter Property="AllowEditing" Value="True" />
    <Setter Property="AllowMoveColumnToDropArea" Value="False" />
    <Setter Property="AllowColumnFiltering" Value="False" />
    <Setter Property="NavigationStyle" Value="Row" />
    <Setter Property="ShowHorizontalLines" Value="False" />
    <Setter Property="ShowIndicator" Value="False" />
    <Setter Property="ShowSearchPanelMode" Value="Never" />
    <Setter Property="ShowNodeImages" Value="True" />
    <Setter Property="ShowVerticalLines" Value="False" />
    <Setter Property="ShowFocusedRectangle" Value="False" />
    <Setter Property="ShowSelectionRectangle" Value="True" />
    <Setter Property="ShowRootIndent" Value="False" />
    <Setter Property="TreeDerivationMode" Value="Selfreference" />
    <Setter Property="TreeLineStyle" Value="None" />
    <Setter Property="NodeImageSelector">
      <Setter.Value>
        <dxdlgn:DetailsNodeImageSelector />
      </Setter.Value>
    </Setter>
  </Style>
  <!--#endregion view styles-->
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Dialogs.Native.ViewModeChooserPopup}" TargetType="{x:Type dxdlgn:ViewModeChooserPopup}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdlgn:ViewModeChooserPopup}">
          <Grid x:Name="PART_PopupRootGrid" Margin="9,6">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="34" />
              <ColumnDefinition Width="9" />
              <ColumnDefinition MinWidth="134" />
            </Grid.ColumnDefinitions>
            <Slider x:Name="PART_Slider" Grid.Column="0" IsSnapToTickEnabled="True" Orientation="Vertical" TickPlacement="None" AutoToolTipPlacement="None" Value="{TemplateBinding SliderValue}" Ticks="{TemplateBinding SliderTicks}" Maximum="{TemplateBinding SliderMaximum}" Height="{Binding Path=ActualHeight, ElementName=PART_BarsControl, Converter={dxdlgn:DialogViewModeChooserSliderHeightConverter}}" />
            <dxb:MenuBarControl x:Name="PART_BarsControl" Grid.Column="2">
              <dxb:MenuBarControl.Resources>
                <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ContentSideBorderTemplate, IsThemeIndependent=True}" TargetType="{x:Type ContentControl}" />
                <ControlTemplate x:Key="{dxbt:GlyphSideControlThemeKey ResourceKey=Template, IsThemeIndependent=True}" TargetType="{x:Type dxb:GlyphSideControl}" />
              </dxb:MenuBarControl.Resources>
              <dxb:PopupMenu x:Name="PART_BarsMenu" dxb:BarManagerHelper.ShowPopupWithDelay="True">
                <dxdlgn:ViewModeBarButton x:Name="PART_ExtraLargeIconButton" ViewMode="ExtraLargeIcon" />
                <dxb:BarStaticItem Content="" />
                <dxdlgn:ViewModeBarButton x:Name="PART_LargeIconButton" ViewMode="LargeIcon" />
                <dxdlgn:ViewModeBarButton x:Name="PART_MediumIconButton" ViewMode="MediumIcon" />
                <dxb:BarStaticItem Content="" />
                <dxdlgn:ViewModeBarButton x:Name="PART_SmallIconButton" ViewMode="SmallIcon" />
                <dxdlgn:ViewModeBarButton x:Name="PART_ListButton" ViewMode="List" />
                <dxdlgn:ViewModeBarButton x:Name="PART_DetailsButton" ViewMode="Details" />
                <dxdlgn:ViewModeBarButton x:Name="PART_TilesButton" ViewMode="Tiles" />
                <dxdlgn:ViewModeBarButton x:Name="PART_ContentButton" ViewMode="Content" />
              </dxb:PopupMenu>
            </dxb:MenuBarControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="BarButtonContentTemplate">
    <TextBlock Text="{Binding}" ToolTip="{Binding}" Margin="0, 0, 20, 0" TextTrimming="CharacterEllipsis" MaxWidth="200" />
  </DataTemplate>
  <DataTemplate x:Key="BreadCrumbButtonContentTemplate">
    <TextBlock Text="{Binding}" ToolTip="{Binding}" TextTrimming="CharacterEllipsis" />
  </DataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Dialogs.Native.BreadCrumbSplitButtonItemLinkControl}" TargetType="{x:Type dxdlgn:BreadCrumbSplitButtonItemLinkControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdlgn:BreadCrumbSplitButtonItemLinkControl}">
          <Grid>
            <dxdlgn:BreadCrumbItemLayoutPanel x:Name="PART_LayoutPanel" />
            <dx:NonLogicalDecorator x:Name="PART_PopupPlacementTarget" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Dialogs.Native.BreadCrumbCrumbButtonItemLinkControl}" TargetType="{x:Type dxdlgn:BreadCrumbCrumbButtonItemLinkControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdlgn:BreadCrumbCrumbButtonItemLinkControl}">
          <dxdlgn:BreadCrumbItemLayoutPanel x:Name="PART_LayoutPanel" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Dialogs.Native.BreadCrumbCrumbsBox}" TargetType="{x:Type dxdlgn:BreadCrumbCrumbsBox}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdlgn:BreadCrumbCrumbsBox}">
          <Grid>
            <Grid.Resources>
              <ItemsPanelTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=ItemsPanelTemplate, IsThemeIndependent=True}">
                <dxdlgn:BreadCrumbCrumbsPanel Margin="0, 0, 60, 0" CollapsedCrumbsCount="{Binding CollapsedCrumbsCount, RelativeSource={RelativeSource AncestorType={x:Type dxdlgn:BreadCrumbCrumbsBox}}, Mode=TwoWay}" />
              </ItemsPanelTemplate>
            </Grid.Resources>
            <dxdlgn:BreadCrumbPathBox x:Name="PART_BreadCrumbPathBox" Grid.ColumnSpan="2" Height="{Binding RelativeSource={RelativeSource Self}, Converter={dxdlgn:BreadCrumbsPathBoxHeightConverter}}" AutoComplete="False" ShowSizeGrip="False" ImmediatePopup="True" SelectAllOnMouseUp="True" SelectAllOnGotFocus="True" IncrementalFiltering="True" ValidateOnTextInput="False" ValidateOnEnterKeyPressed="False" ClearSelectionOnBackspace="True" TypedPaths="{Binding Path=(dxdlgn:BreadCrumbControl.BreadCrumb).TypedPaths, RelativeSource={RelativeSource Self}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" PathBoxText="{Binding Path=(dxdlgn:BreadCrumbControl.BreadCrumb).PathBoxText, RelativeSource={RelativeSource Self}, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Path=(dxdlgn:BreadCrumbControl.BreadCrumb).PathBoxSource, RelativeSource={RelativeSource Self}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" EditValue="{Binding Path=(dxdlgn:BreadCrumbControl.BreadCrumb).CurrentPath, RelativeSource={RelativeSource Self}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
              <dxdlgn:BreadCrumbPathBox.EditTemplate>
                <ControlTemplate>
                  <TextBox x:Name="PART_Editor" BorderThickness="0" Visibility="{Binding Path=State, RelativeSource={RelativeSource AncestorType={x:Type dxdlgn:BreadCrumbCrumbsBox}}, Converter={dxdlgn:BreadCrumbsBoxStateToVisibilityConverter InvisibleState=Crumbs}}" />
                </ControlTemplate>
              </dxdlgn:BreadCrumbPathBox.EditTemplate>
              <dxdlgn:BreadCrumbPathBox.PopupContentTemplate>
                <ControlTemplate>
                  <Grid DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxdlgn:BreadCrumbPathBox}}}">
                    <Grid.Resources>
                      <ControlTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContainerTemplate, IsThemeIndependent=True}" TargetType="{x:Type dx:WaitIndicatorContainer}">
                        <ContentPresenter />
                      </ControlTemplate>
                    </Grid.Resources>
                    <dxg:GridControl Name="PART_GridControl" Grid.Row="0">
                      <dxg:GridControl.View>
                        <dxg:TableView AutoWidth="True" NavigationStyle="Row" ShowColumnHeaders="False" ShowHorizontalLines="False" ShowIndicator="False" ShowVerticalLines="False" />
                      </dxg:GridControl.View>
                    </dxg:GridControl>
                    <dx:WaitIndicator x:Name="PART_LoadingIndicator" DeferedVisibility="True" Visibility="{Binding Path=ItemsSource, Converter={dxdlgn:EnumerableToVisibilityConverter IsEmptyVisible=True}}" />
                  </Grid>
                </ControlTemplate>
              </dxdlgn:BreadCrumbPathBox.PopupContentTemplate>
            </dxdlgn:BreadCrumbPathBox>
            <Grid x:Name="PART_CrumbsBox" Margin="1, 0" ClipToBounds="True" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="{Binding State, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Converter={dxdlgn:BreadCrumbsBoxStateToVisibilityConverter InvisibleState=Path}}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Image x:Name="PART_Icon" Grid.Column="0" Margin="3, 0" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding Path=(dxdlgn:BreadCrumbControl.BreadCrumb).CurrentNode.ImageSource, RelativeSource={RelativeSource Self}}" />
              <dxdlgn:BreadCrumbCrumbsContainer x:Name="PART_BreadCrumbsContainer" Grid.Column="1" VerticalAlignment="Stretch" ItemsSource="{TemplateBinding SourceInfo}">
                <dxdlgn:BreadCrumbCrumbsContainer.ItemTemplateSelector>
                  <dxdlgn:BreadCrumbCrumbsTemplateSelector>
                    <dxdlgn:BreadCrumbCrumbsTemplateSelector.SpecialTypeCrumbTemplate>
                      <DataTemplate>
                        <ContentControl>
                          <dxdlgn:BreadCrumbRootSplitButtonItem ActAsDropDown="True" CloseSubMenuOnClick="False" CollapsedCrumbsCount="{Binding CollapsedCrumbsCount, RelativeSource={RelativeSource AncestorType={x:Type dxdlgn:BreadCrumbCrumbsBox}}}">
                            <dxdlgn:BreadCrumbRootSplitButtonItem.PopupControl>
                              <dxdlgn:BreadCrumbPopupMenu MaxHeight="400" dxb:BarManagerHelper.ShowPopupWithDelay="True" IsOpen="{Binding IsExpanded, Mode=OneWayToSource}">
                                <dxb:BarItemMenuHeader IsVisible="{Binding Children, Converter={dxdlgn:EnumerableToBooleanConverter IsEmptyVisible=True}}">
                                  <dxb:BarItemMenuHeader.ContentTemplate>
                                    <DataTemplate>
                                      <dx:ColumnWaitIndicator IsIndeterminate="True" IsHitTestVisible="True" />
                                    </DataTemplate>
                                  </dxb:BarItemMenuHeader.ContentTemplate>
                                </dxb:BarItemMenuHeader>
                                <dxb:BarLinkContainerItem ItemLinksSourceElementGeneratesUniqueBarItem="True" ItemLinksSource="{Binding Children}">
                                  <dxb:BarLinkContainerItem.ItemTemplateSelector>
                                    <dxdlgn:BreadCrumbRootNodeChildrenTemplateSelector>
                                      <dxdlgn:BreadCrumbRootNodeChildrenTemplateSelector.SpecialTypeCrumbTemplate>
                                        <DataTemplate>
                                          <ContentControl>
                                            <dxb:BarItemSeparator />
                                          </ContentControl>
                                        </DataTemplate>
                                      </dxdlgn:BreadCrumbRootNodeChildrenTemplateSelector.SpecialTypeCrumbTemplate>
                                      <dxdlgn:BreadCrumbRootNodeChildrenTemplateSelector.DefaultCrumbTemplate>
                                        <DataTemplate>
                                          <ContentControl>
                                            <dxb:BarButtonItem Glyph="{Binding ImageSource}" Content="{Binding DisplayData}" Command="{Binding Path=(dxdlgn:BreadCrumbControl.BreadCrumb).NavigateToBreadCrumbCommand, RelativeSource={RelativeSource Self}, Mode=OneWay}" CommandParameter="{Binding }" ContentTemplate="{StaticResource BarButtonContentTemplate}" />
                                          </ContentControl>
                                        </DataTemplate>
                                      </dxdlgn:BreadCrumbRootNodeChildrenTemplateSelector.DefaultCrumbTemplate>
                                    </dxdlgn:BreadCrumbRootNodeChildrenTemplateSelector>
                                  </dxb:BarLinkContainerItem.ItemTemplateSelector>
                                </dxb:BarLinkContainerItem>
                              </dxdlgn:BreadCrumbPopupMenu>
                            </dxdlgn:BreadCrumbRootSplitButtonItem.PopupControl>
                          </dxdlgn:BreadCrumbRootSplitButtonItem>
                        </ContentControl>
                      </DataTemplate>
                    </dxdlgn:BreadCrumbCrumbsTemplateSelector.SpecialTypeCrumbTemplate>
                    <dxdlgn:BreadCrumbCrumbsTemplateSelector.DefaultCrumbTemplate>
                      <DataTemplate>
                        <ContentControl>
                          <dxdlgn:BreadCrumbSplitButtonItem Content="{Binding DisplayData}" Command="{Binding Path=(dxdlgn:BreadCrumbControl.BreadCrumb).NavigateToBreadCrumbCommand, RelativeSource={RelativeSource Self}, Mode=OneWay}" CommandParameter="{Binding }" ContentTemplate="{StaticResource BreadCrumbButtonContentTemplate}">
                            <dxdlgn:BreadCrumbSplitButtonItem.PopupControl>
                              <dxdlgn:BreadCrumbPopupMenu MaxHeight="400" dxb:BarManagerHelper.ShowPopupWithDelay="True" IsOpen="{Binding IsExpanded, Mode=OneWayToSource}">
                                <dxb:BarItemMenuHeader IsVisible="{Binding Children, Converter={dxdlgn:EnumerableToBooleanConverter IsEmptyVisible=True}}">
                                  <dxb:BarItemMenuHeader.ContentTemplate>
                                    <DataTemplate>
                                      <dx:ColumnWaitIndicator IsIndeterminate="True" IsHitTestVisible="True" />
                                    </DataTemplate>
                                  </dxb:BarItemMenuHeader.ContentTemplate>
                                </dxb:BarItemMenuHeader>
                                <dxb:BarLinkContainerItem ItemLinksSourceElementGeneratesUniqueBarItem="True" ItemLinksSource="{Binding Children}">
                                  <dxb:BarLinkContainerItem.ItemTemplate>
                                    <DataTemplate>
                                      <ContentControl>
                                        <dxb:BarButtonItem Glyph="{Binding ImageSource}" Content="{Binding DisplayData}" Command="{Binding Path=(dxdlgn:BreadCrumbControl.BreadCrumb).NavigateToBreadCrumbCommand, RelativeSource={RelativeSource Self}, Mode=OneWay}" CommandParameter="{Binding }" ContentTemplate="{StaticResource BarButtonContentTemplate}" />
                                      </ContentControl>
                                    </DataTemplate>
                                  </dxb:BarLinkContainerItem.ItemTemplate>
                                </dxb:BarLinkContainerItem>
                              </dxdlgn:BreadCrumbPopupMenu>
                            </dxdlgn:BreadCrumbSplitButtonItem.PopupControl>
                          </dxdlgn:BreadCrumbSplitButtonItem>
                        </ContentControl>
                      </DataTemplate>
                    </dxdlgn:BreadCrumbCrumbsTemplateSelector.DefaultCrumbTemplate>
                    <dxdlgn:BreadCrumbCrumbsTemplateSelector.CrumbWithoutChildrenTemplate>
                      <DataTemplate>
                        <ContentControl>
                          <dxdlgn:BreadCrumbCrumbButtonItem Content="{Binding DisplayData}" Command="{Binding Path=(dxdlgn:BreadCrumbControl.BreadCrumb).NavigateToBreadCrumbCommand, RelativeSource={RelativeSource Self}, Mode=OneWay}" CommandParameter="{Binding }" ContentTemplate="{StaticResource BreadCrumbButtonContentTemplate}" />
                        </ContentControl>
                      </DataTemplate>
                    </dxdlgn:BreadCrumbCrumbsTemplateSelector.CrumbWithoutChildrenTemplate>
                  </dxdlgn:BreadCrumbCrumbsTemplateSelector>
                </dxdlgn:BreadCrumbCrumbsContainer.ItemTemplateSelector>
              </dxdlgn:BreadCrumbCrumbsContainer>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Dialogs.Native.BreadCrumbControl}" TargetType="{x:Type dxdlgn:BreadCrumbControl}">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdlgn:BreadCrumbControl}">
          <Grid Margin="{TemplateBinding Margin}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.Resources>
              <ItemsPanelTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=ItemsPanelTemplate, IsThemeIndependent=True}">
                <StackPanel Orientation="Horizontal" />
              </ItemsPanelTemplate>
            </Grid.Resources>
            <dxdlgn:FileDialogToolbar x:Name="PART_NavigationBox" VerticalAlignment="Center">
              <dxdlgn:BreadCrumbButtonItem x:Name="PART_GoBackwardButton" Command="{Binding Path=GoBackwardCommand, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Glyph="{dxdlgn:DialogsSvgImageExtension Path=Images/Svg/Backward.svg}" />
              <dxdlgn:BreadCrumbButtonItem x:Name="PART_GoForwardButton" Command="{Binding Path=GoForwardCommand, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Glyph="{dxdlgn:DialogsSvgImageExtension Path=Images/Svg/Forward.svg}" />
              <dxdlgn:BreadCrumbSubItem x:Name="PART_HistoryButton" ItemLinksSource="{Binding Path=History, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" IsEnabled="{Binding Path=History, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Converter={dxdlgn:BreadCrumbHistoryEnabledConverter}}">
                <dxdlgn:BreadCrumbSubItem.ItemTemplate>
                  <DataTemplate>
                    <ContentControl>
                      <dxb:BarButtonItem Glyph="{Binding Type, Converter={dxdlgn:BreadCrumbHistoryButtonGlyphConverter}}" Content="{Binding Node.DisplayData}" Command="{Binding Path=(dxdlgn:BreadCrumbControl.BreadCrumb).GoToRecentLocationCommand, RelativeSource={RelativeSource Self}, Mode=OneWay}" CommandParameter="{Binding Node}" ContentTemplate="{StaticResource BarButtonContentTemplate}" />
                    </ContentControl>
                  </DataTemplate>
                </dxdlgn:BreadCrumbSubItem.ItemTemplate>
              </dxdlgn:BreadCrumbSubItem>
              <dxdlgn:BreadCrumbButtonItem x:Name="PART_GoUpButton" Command="{Binding Path=GoUpCommand, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Glyph="{dxdlgn:DialogsSvgImageExtension Path=Images/Svg/Up.svg}" />
            </dxdlgn:FileDialogToolbar>
            <dxdlgn:BreadCrumbCrumbsBox x:Name="PART_BreadCrumbCrumbsBox" Grid.Column="1" VerticalAlignment="Stretch" FocusVisualStyle="{x:Null}" BreadCrumbs="{TemplateBinding BreadCrumbs}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Dialogs.Native.FileDialogBottomPane}" TargetType="{x:Type dxdlgn:FileDialogBottomPane}">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdlgn:FileDialogBottomPane}">
          <Grid x:Name="PART_RootGrid">
            <Grid.Resources>
              <Style x:Key="{x:Type Button}" TargetType="Button">
                <Setter Property="Padding" Value="10, 2" />
                <Setter Property="MinWidth" Value="95" />
                <Setter Property="MaxWidth" Value="145" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
              </Style>
              <Style x:Key="{x:Type TextBlock}" TargetType="TextBlock">
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
              </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="PART_TextEditorCaption" Margin="0, 0, 10, 0" Text="{TemplateBinding Caption}" VerticalAlignment="Center" />
            <dxe:TextEdit x:Name="PART_TextEditor" Grid.Column="1" Grid.ColumnSpan="{DXBinding '@e(PART_TypesEditor).IsVisible ? 1 : 3'}" Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
              <dxmvvm:Interaction.Behaviors>
                <dxmvvm:FocusBehavior />
              </dxmvvm:Interaction.Behaviors>
            </dxe:TextEdit>
            <dxe:ComboBoxEdit x:Name="PART_TypesEditor" Grid.Column="2" Grid.ColumnSpan="2" MinWidth="200" MaxWidth="300" Margin="10, 0, 0, 0" IsTextEditable="False" TextTrimming="CharacterEllipsis" ItemsSource="{TemplateBinding FiltersSource}" DisplayMember="{TemplateBinding FilterDisplayMember}" SelectedIndex="{Binding Path=SelectedFilterIndex, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Visibility="{TemplateBinding FiltersSource, Converter={StaticResource ObjectToVisibilityConverter}}" />
            <Button x:Name="PART_AcceptButton" Grid.Row="1" Grid.Column="2" Margin="10, 10, 5, 0" IsDefault="True">
              <TextBlock Text="{TemplateBinding AcceptButtonName}" />
            </Button>
            <Button x:Name="PART_CancelButton" Grid.Row="1" Grid.Column="3" Margin="5, 10, 0, 0" IsCancel="True">
              <TextBlock Text="{TemplateBinding CancelButtonName}" />
            </Button>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Dialogs.Native.FolderBrowserBottomPane}" TargetType="{x:Type dxdlgn:FolderBrowserBottomPane}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdlgn:FolderBrowserBottomPane}">
          <Grid x:Name="PART_ButonsPanel">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="8" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.Resources>
              <Style x:Key="{x:Type Button}" TargetType="Button">
                <Setter Property="Padding" Value="10, 2" />
                <Setter Property="MinWidth" Value="70" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
              </Style>
              <Style x:Key="{x:Type TextBlock}" TargetType="TextBlock">
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
              </Style>
            </Grid.Resources>
            <Button x:Name="PART_NewFolderButton" IsEnabled="{TemplateBinding IsNewFolderButtonEnabled}" Visibility="{TemplateBinding ShowNewFolderButton, Converter={StaticResource BooleanToVisibilityConverter}}" Content="{Binding ConverterParameter=MakeNewFolderButtonText, Converter={StaticResource DialogStringIdConverter}}" />
            <Button x:Name="PART_AcceptButton" Grid.Column="2" MaxWidth="80" IsDefault="True">
              <TextBlock Text="{TemplateBinding AcceptButtonName}" />
            </Button>
            <Button x:Name="PART_CancelButton" Grid.Column="4" MaxWidth="90" IsCancel="True">
              <TextBlock Text="{TemplateBinding CancelButtonName}" />
            </Button>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>