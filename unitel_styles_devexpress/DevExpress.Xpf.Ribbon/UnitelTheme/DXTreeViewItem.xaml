<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!--BEGIN WPF-->
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Ribbon.v20.2;component/Themes/Generic/DXTreeViewItem.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!--END WPF-->
  <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInverted" Invert="True" />
  <ControlTemplate x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ExpanderTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid Background="#00000000" Height="14" SnapsToDevicePixels="True" Width="14">
      <Path x:Name="GlyphCollapsed" Data="F1 M 1.27157e-006,1.90735e-006L 1.27157e-006,8L 4,4L 1.27157e-006,1.90735e-006 " Fill="#FF666666" Height="8" SnapsToDevicePixels="True" Stretch="Fill" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverterInverted}}" Width="4" />
      <Path x:Name="GlyphExpanded" Data="F1 M 0,6L 6,0L 6,6L 0,6 Z " Fill="#FF666666" Height="6" SnapsToDevicePixels="True" Stretch="Fill" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" Width="6" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="GlyphCollapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
              <ColorAnimation Duration="0" Storyboard.TargetName="GlyphExpanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="GlyphCollapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
              <ColorAnimation Duration="0" Storyboard.TargetName="GlyphExpanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ExpanderStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="12" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Template" Value="{DynamicResource {dxrt:DXTreeViewItemThemeKey ResourceKey=ExpanderTemplate}}" />
    <Setter Property="Margin" Value="4" />
  </Style>
  <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ItemsPresenterStyle}" TargetType="{x:Type ItemsPresenter}">
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="40,0,0,0" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Margin" Value="20,0,0,0" />
  </Style>
  <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ContentStyle}" TargetType="{x:Type ContentControl}">
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="12,12,12,12" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Margin" Value="2,1,2,1" />
    <Setter Property="Foreground" Value="#FF3C3C3C" />
  </Style>
  <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=GlyphStyle}" TargetType="{x:Type Image}">
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="12,12,0,12" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Margin" Value="2,1,2,1" />
  </Style>
  <!-- For Removing -->
  <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=GlyphContainerStyle}" TargetType="{x:Type ContentControl}" />
  <ControlTemplate x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid SnapsToDevicePixels="True">
      <Border x:Name="PART_Normal" />
      <Border x:Name="PART_Hover" Background="#FFCDE6F7" Opacity="0" />
      <Border x:Name="PART_Pressed" Background="#FF92C0E0" Opacity="0" />
      <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Hover">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=BorderStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Setter Property="Template" Value="{DynamicResource {dxrt:DXTreeViewItemThemeKey ResourceKey=BorderTemplate}}" />
  </Style>
  <!--GroupItem-->
  <Style x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=ItemsPresenterStyle}" TargetType="{x:Type ItemsPresenter}">
    <Setter Property="Margin" Value="0,1,0,1" />
  </Style>
  <Style x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=ContentStyle}" TargetType="{x:Type ContentControl}">
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="12" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Foreground" Value="#FF0072C6" />
    <Setter Property="FontSize" Value="18" />
    <Setter Property="FontWeight" Value="Light" />
    <Setter Property="Margin" Value="4" />
  </Style>
  <ControlTemplate x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <ContentControl Content="{TemplateBinding Content}" Margin="1" />
  </ControlTemplate>
  <Style x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=BorderStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Setter Property="Template" Value="{DynamicResource {dxrt:DXTreeViewGroupItemThemeKey ResourceKey=BorderTemplate}}" />
  </Style>
</ResourceDictionary>